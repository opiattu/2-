#include <clocale>
#include <iostream>
#include <vector>

using namespace std;

int partition(vector<int>& vec, int left, int right) {
    int pivotIndex = left + (right - left) / 2;
    int pivotValue = vec[pivotIndex];
    int i = left, j = right;
    int temp;
    while (i <= j) {
        while (vec[i] <= pivotValue) {
            i++;
        }
        while (vec[j] >= pivotValue) {
            j--;
        }
        if (i <= j) {
            temp = vec[i];
            vec[i] = vec[j];
            vec[j] = temp;
            i++;
            j--;
        }
    }
    return i;
}

void quicksort(vector<int>& vec, int left, int right) {
    if (left < right) {
        int pivotIndex = partition(vec, left, right);
        quicksort(vec, left, pivotIndex - 1);
        quicksort(vec, pivotIndex, right);
    }
}

int main()
{
    setlocale(LC_ALL, "Russian");

    int n; //кол-во элементов
    cout << "Введите кол-во элементов последовательности:";
    cin >> n;

    vector <int> vec; // вектор, который будет хранить все числа последовательнсоти

    int a;// просто переменная, которая создает список, создаваемой последовательсноти
    for (int i = 0; i < n; i++) {
        cout << i + 1 << ". ";
        cin >> a;
        vec.push_back(a);
    }
    cout << "Вот как выглядит последовательность до сортировки: /n";

    for (int i = 0; i < n; i++) {
        cout << vec[i] << " ";

    }

    quicksort(vec, 0, vec.size() - 1);

    cout << "Вот как выглядит последовательность после сортировки: /n";

    for (vector<int>::iterator it = vec.begin(); it != vec.end(); it++) {
        cout << *it << " ";
    }

    return 0;
}

