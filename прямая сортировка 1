#include <clocale>
#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>

using namespace std;

// Функция прямой сортировки 
void bubbleSort(vector<int>& vec) { 
    int n = vec.size();
    bool swapped;
    for (int i = 0; i < n - 1; i++) {
        swapped = false;
        for (int j = 0; j < n - i - 1; j++) {
            if (vec[j] > vec[j + 1]) {
                swap(vec[j], vec[j + 1]);
                swapped = true;
            }
        }
        if (!swapped) {
            break;
        }
    }
}

int main() {
    setlocale(LC_ALL, "Russian");

    srand(time(0));

    int n;
    cout << "Введите кол-во элементов последовательности (кол-во случайных чисел): ";
    cin >> n;

    vector<int> vec;
    // Генерация случайных чисел и добавление их в вектор
    for (int i = 0; i < n; i++) {
        vec.push_back(rand() % 2001 - 1000); // генерация случайного числа от -1000 до 1000
    }

    int v;
    cout << "Хотите ли Вы посмотреть последовательность до сортировки? - да (1), - нет (0)\n";
    cin >> v;

    // Вывод последовательности до сортировки
    if (v == 1) {
        cout << "Вот как выглядит последовательность до сортировки:\n";
        for (int i = 0; i < n; i++) {
            cout.width(7); // установка ширины столбца
            cout << vec[i];
        }
        cout << endl;
    }

    int t;
    cout << "Какую вы хотите видеть сортировку: убывание (0) или возрастание (1)? ";
    cin >> t;

    // Сортировка последовательности
    bubbleSort(vec);

    // Вывод отсортированной последовательности по возрастанию
    if (t == 1) {
        cout << "\nВот как выглядит последовательность после сортировки по возрастанию:\n";
        for (int i = 0; i < n; i++) {
            cout.width(7); // установка ширины столбца
            cout << vec[i];
        }
        cout << endl;
    }

    // Вывод отсортированной последовательности по убыванию
    if (t == 0) {
        cout << "\nВот как выглядит последовательность после сортировки по убыванию:\n";
        for (int i = n - 1; i >= 0; i--) {
            cout.width(7); // установка ширины столбца
            cout << vec[i];
        }
        cout << endl;
    }

    return 0;
}
